include ../../../common-mixins
include ../../mixins

mixin author
  +if("message.docAuthors.length > 0")
    +each("message.docAuthors as author, i")
      +if("i !== 0")
        span.mr-2 ,
      +inline-link("{author.url}", "{author.name}")(
        class="xs:text-paragraph-s"
        target="_blank"
        rel="noreferrer"
      )
    +else {message._author.name}

mixin author-v2
  +if("message.docAuthors.length > 0")
    +each("message.docAuthors as author, i")
      +if("i !== 0")
        span.mr-2 &amp;
      .div(class="flex gap-2 justify-end smDown:justify-start")
        +if("getAvatarUrl(author.name) !== undefined")
          <img src={getAvatarUrl(author.name)} alt={author.name} class="h-7.25 w-7.25 rounded-2sm border border-l6" />
        +inline-link("{author.url}", "{author.name}")(
          class="xs:text-paragraph-s bg-transparent"
          target="_blank"
          rel="noreferrer"
        )
    +else
      .div(class="flex gap-2 justify-end smDown:justify-start")
        <img src={message._author.avatarUrl} alt={message._author.name} class="h-7.25 w-7.25 rounded-2sm border border-l6" />
        +inline-link("{message._author.name}", "{message._author.name}")(
          class="xs:text-paragraph-s bg-transparent"
          target="_blank"
          rel="noreferrer"
        )

+if("!isV2")
  +main-section
    +header-wrapper
      +nav-crumbs
        +crumbItemLink("/", "Holdex")
        +crumbDelimiter
        +crumbItemLink("/c", "Studio")
        +crumbDelimiter
        +crumbItemLink("/c/{storeData.community.slug}", "{storeData.community.name}")
      +if("message.cover")
        +messageHeader("{message.title}", "{message.subtitle}", "{message.cover}")
        +else
          +messageHeader("{message.title}", "{message.subtitle}")
      .text-container(
        class="flex flex-row w-full items-center justify-between py-7 border-y border-solid border-l4 smDown:flex-col smDown:justify-start smDown:items-start smDown:py-4"
      ) 
        .text-content(class!="flex flex-col items-start")
          TextParagraph(textColor="text-t3")
            time(
              datetime="{timeFormat(message.createdAt, 'YYYY-MM-DD')}"
              title="{extendedTimeFormat(message.createdAt)}"
            ) {timeFormat(message.createdAt)} {message.updatedAt ? '| Updated ' + timeFormat(message.updatedAt) : ''}
        .text-content(class!="flex flex-col smDown:gap-4")
          TextParagraph(class="flex flex-wrap justify-end smDown:justify-start" textColor="text-t3") #[span.mr-1 By] #[+author]
          +if("message.isGoogleDoc")
            .edit-wrapper(class="flex gap-2 justify-end smDown:justify-start")
              TextParagraph(class="flex" textColor="text-t3") Have a suggestion?
              +inline-link("{message.isGoogleDoc}", "Edit Article")(
                class="xs:text-paragraph-s"
                target="_blank"
                rel="noreferrer"
              )
    +content-wrapper
      +if("message.tocs && message.tocs.length > 0")
        details(
          open="false"
          on:click|preventDefault="{toggleToc}"
          class:active="{tocOpen}"
          class="flex w-full cursor-pointer flex-col bg-l1 rounded-xl border border-solid border-l4 dark:bg-l2"
        )
          summary(class="flex items-center justify-between px-3.75 py-3.625 w-full")
            TextParagraph(class="pointer-events-none" textColor="text-t3") Table of Contents
            +if("tocOpen")
              Button(class="pointer-events-none" variant="solo" size="small" icon="{BarsArrowUp}")
              +else
                Button(class="pointer-events-none" variant="solo" size="small" icon="{BarsArrowDown}")
          +if("tocOpen")
            .details-content(
              transition:slide|local
              on:outroend="{handleOutroEnd}"
              class="relative p-3.75 border-t border-solid border-l4"
            )
              ul.toc-block
                +each("message.tocs as item")
                  li(
                    on:click!="{() => handleClick($page.url, item.id)}"
                    class!="text-paragraph-l xs:text-paragraph-s text-t3 transition-colors hover:text-t1 {renderTocPadding(item.level)}"
                  ) ⏤ {@html item.cleanRef}
      BodyRenderer(blocks="{message.blocks}")
  +else
    +main-section
      +header-wrapper-v2(class="mb-7.25 xs:mb-4")
        +nav-crumbs
          +crumbItemLink("/", "Holdex")
          +crumbDelimiter
          +crumbItemLink("/c", "Studio")
          +crumbDelimiter
          +crumbItemLink("/c/{storeData.community.slug}", "{storeData.community.name}")
        +if("message.cover")
          +section-hero-image("{message.cover}", "/header/effect.png")
            +article-title-subtitle("{message.title}", "{message.subtitle}", "{message.id}")
          +else
            +messageHeader("{message.title}", "{message.subtitle}")
        .text-container(
          class="flex flex-row smDown:w-full w-[604px] items-center justify-between pb-7 border-b border-solid border-l4 smDown:flex-col smDown:justify-start smDown:items-start smDown:pb-4 "
        ) 
          .text-content(class!="flex flex-col items-start")
            TextParagraph(textColor="text-t3" class="!w-48")
              time(
                datetime="{timeFormat(message.createdAt, 'YYYY-MM-DD')}"
                title="{extendedTimeFormat(message.createdAt)}"
              ) {timeFormat(message.createdAt)}
          .text-content(class!="flex flex-col smDown:gap-4")
            TextParagraph(class="flex flex-wrap justify-end smDown:justify-start" textColor="text-t3") #[span.mr-2 By] #[+author-v2]
      +content-wrapper
        +if("message.tocs && message.tocs.length > 0")
          details(
            open="false"
            on:click|preventDefault="{toggleToc}"
            class:active="{tocOpen}"
            class="flex w-full cursor-pointer flex-col bg-l1 rounded-xl border border-solid border-l4 dark:bg-l2"
          )
            summary(class="flex items-center justify-between px-3.75 py-3.625 w-full")
              TextParagraph(class="pointer-events-none" textColor="text-t3") Table of Contents
              +if("tocOpen")
                Button(class="pointer-events-none" variant="solo" size="small" icon="{BarsArrowUp}")
                +else
                  Button(class="pointer-events-none" variant="solo" size="small" icon="{BarsArrowDown}")
            +if("tocOpen")
              .details-content(
                transition:slide|local
                on:outroend="{handleOutroEnd}"
                class="relative p-3.75 border-t border-solid border-l4"
              )
                ul.toc-block
                  +each("message.tocs as item")
                    li(
                      on:click!="{() => handleClick($page.url, item.id)}"
                      class!="text-paragraph-l xs:text-paragraph-s text-t3 transition-colors hover:text-t1 {renderTocPadding(item.level)}"
                    ) ⏤ {@html item.cleanRef}
        BodyRenderer(blocks="{message.blocks}")
