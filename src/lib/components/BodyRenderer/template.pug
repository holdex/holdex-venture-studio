+each('blocks as item, index')
    +if("typeof item === 'object'")
        Switch(condition="{item.type}")
            Case(value="heading")
                +if("item.level === 'h1'")
                    svelte:element(
                        this="p" 
                        class="text-h1-l font-satoshi" 
                        id="{item.id}")
                        +each("item.items as hItem")
                            InlineBlock(item="{hItem}")
                    +else()
                        svelte:element(
                            this="{item.level}" 
                            class="{bindHeading(item.level)} py-4" 
                            id="{item.id}")
                            +each("item.items as hItem")
                                InlineBlock(item="{hItem}")
            Case(value="paragraph")
                svelte:element(this="p" class="text-paragraph-l")
                    +each("item.items as pItem")
                        InlineBlock(item="{pItem}")
            Case(value="list")
                svelte:element(
                    class="{item.style === 'unordered' ? 'list-disc' : 'list-decimal'} list-inside"
                    this="{item.style === 'unordered' ? 'ul' : 'ol'}")
                   +each("item.items as liItem")
                        li(class="text-paragraph-l")
                            +each("liItem as lItem")
                                InlineBlock(item="{lItem}") 
            Case(value="nestedList")
                svelte:element(
                    class="{item.style === 'unordered' ? 'list-disc' : 'list-decimal'} list-inside"
                    this="{item.style === 'unordered' ? 'ul' : 'ol'}")
                   +each("item.items as liItem")
                        NestedList(item="{liItem}" type="{item.style}" let:item="{lItem}")
                            InlineBlock(item="{lItem}") 
            //- Case(value="linkTool")
            Case(value="quote")
                .blockquote(
                    title="{item.text}" 
                    class="bg-l2 overflow-clip rounded-xl border border-solid border-l4 p-4 pl-5.5 text-paragraph-l italic before:content-none before:w-1.5 before:h-full before:bg-accent1-default")
                    +each("item.items as QItem")
                        InlineBlock(item="{QItem}") 
            Case(value="embed")
                s handle embed
            Case(value="code")
                pre(class="bg-l2 border border-solid border-l4 rounded-xl py-4 px-6")
                    code(class="text-code")
                        TextWrapper(text="{item.data.code}")
            Case(value="table")
                s handle table
            Case(value="image")
                Image(item="{item}" index="{index}")
        +else()
            TextWrapper(text="{item}")