mixin table-cell
  +if("typeof cellContents === 'object'")
    +each('cellContents as content')
      Item(item="{content}" isTableCell)
    +else
      Item(item="{cellContents}" isTableCell)

.relative.w-full.overflow-auto
  table(class="w-full min-w-full border-separate border-spacing-0 bg-l1")
    +each('cells as row, rowIndex')
      thead
        tr
          +each('row as cellContents, colIndex')
            +if('rowIndex === 0')
              +if('colIndex === 0')
                th(
                  class="z-99 left-0 sticky bg-l2 py-1.5 px-3 text-t1 text-footnote font-bold border-solid border-l border-t border-l4 first:rounded-tl-xl"
                  scope="col"
                )
                  +table-cell
                +else
                th(
                  class="{colIndex === 1 ? 'bg-gradient-to-r to-transparent from-s1' : colIndex === row.length-1 ? 'bg-gradient-to-r to-s1 from-transparent' : ''} bg-l2 py-1.5 px-3 text-t1 text-footnote font-bold border-solid border-l border-t border-l4 first:rounded-tl-xl last:rounded-tr-xl"
                  scope="col"
                )
                  +table-cell
      tbody
        tr
          +each('row as cellContents, colIndex')
            +if('rowIndex != 0')
              +if('colIndex === 0')
                td(
                  class="z-99 bg-l1 left-0 sticky py-1.5 px-3 text-t2 text-footnote border-solid border-l border-t border-l4 last:border-r {rowIndex === cells.length - 1 ? 'first:rounded-bl-xl last:rounded-br-xl border-b': ''}"
                )
                  +table-cell
                +else
                  td(
                    class="{colIndex === 1 ? 'bg-gradient-to-r to-transparent from-s1' : colIndex === row.length-1 ? 'bg-gradient-to-r to-s1 from-transparent' : ''}  bg-l1 py-1.5 px-3 text-t2 text-footnote border-solid border-l border-t border-l4 last:border-r {rowIndex === cells.length - 1 ? 'first:rounded-bl-xl last:rounded-br-xl border-b': ''}"
                  )
                    +table-cell
